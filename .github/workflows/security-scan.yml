name: Security Scan

on:
  push:
    branches: [ development, main ]
    paths: [ 'infra/terraform/**', 'src/**', 'Dockerfile*' ]
  pull_request:
    branches: [ development, main ]

jobs:
  # Security scan for Infrastructure as Code
  terraform-security:
    name: üîí IaC Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Checkov - Infrastructure Security Scan
      uses: bridgecrewio/checkov-action@v12
      with:
        directory: infra/terraform/
        framework: terraform
        output_format: cli
        check: CKV_AZURE_*
        output_file_path: 'checkov-results.sarif'
        format: 'sarif'

    - name: Upload Checkov scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'checkov-results.sarif'

    - name: Trivy - Terraform Security Scan
      uses: aquasecurity/trivy-action@0.29.0
      with:
        scan-type: 'config'
        scan-ref: 'infra/terraform/'
        format: 'sarif'
        output: 'tfsec-results.sarif'

    - name: Upload TFSec scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'tfsec-results.sarif'

  # Security scan for secrets
  secrets-scan:
    name: üîë Secrets Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: GitLeaks - Secrets Detection
      uses: zricethezav/gitleaks-action@v2
      with:
        config-path: .gitleaks.toml

  # Security scan for Docker images and filesystem
  trivy-scan:
    name: üê≥ Container & Filesystem Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.29.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

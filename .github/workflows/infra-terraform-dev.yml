name: Infrastructure - Terraform (dev)

on:
  workflow_dispatch:
  push:
    branches: [ development ]
    paths:
      - 'infra/terraform/**'
      - '.github/workflows/infra-terraform-dev.yml'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_DIR: infra/terraform/stacks/app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Extract Subscription ID
        id: sub
        shell: bash
        run: |
          SUBS=$(jq -r '.subscriptionId' <<< '${{ secrets.AZURE_CREDENTIALS }}')
          echo "SUBSCRIPTION_ID=$SUBS" >> "$GITHUB_ENV"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: |
          terraform -chdir="$TF_DIR" init -upgrade

      - name: Import existing Resource Group if needed
        shell: bash
        run: |
          set -euo pipefail
          ADDR="azurerm_resource_group.rg"
          RG_NAME="tripradar-dev-rg"
          if terraform -chdir="$TF_DIR" state list | grep -q "^$ADDR$"; then
            echo "RG already in state — skipping import"
            exit 0
          fi
          if az group show -n "$RG_NAME" >/dev/null 2>&1; then
            echo "Importing existing RG into state..."
            terraform -chdir="$TF_DIR" import \
              "$ADDR" "/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${RG_NAME}" || true
          else
            echo "RG not found in Azure — skipping import"
          fi

      - name: Terraform Plan
        run: |
          terraform -chdir="$TF_DIR" plan -input=false

      - name: Terraform Apply (development)
        if: github.ref == 'refs/heads/development'
        run: |
          terraform -chdir="$TF_DIR" apply -auto-approve -input=false
